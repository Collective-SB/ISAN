//Name:             ISANv2_dev Quad MC development test
//Current Version:      V2.4b
//Credit:               Azurethi, Lumi Virtual, Recatek

// How to set up:
//  Each section below separated by the "----+----|" pattern
//   is code for an individual yolol chip.
//
// 1 Set up four receivers as before with ISANv1 quad
//
// 2 Simply copy & paste each section into chips on your ship.
//
// 3 Add each global field to memory chips (with the exception of PosV2 & setup)
//   When reading the vars, square brackets ([]) denote a set of options
//   Bars (|) mean "or" and dashes (-) give ranges. For example :
//   :[A|B][1-3] would mean :A1, :A2, :A3, :B1, :B2, :B3
//
// 4 Set up devices:
//     - A display connected to the :PosV2 field
//     - A button connected to the :setup field
//
// 5 Remember that this is a dev version.

//Globals:
//  :setup          - Setup script halt ctrl (Set==1 to start system)
//  :M[1-4]         - Message filter for transmitter [1-4]
//  :R[1-4]         - Signal Strength of transmitter [1-4]
//  :[X|Y|Z][1-4]   - Position of transmitter [1-4]
//
//  :rst=1          - Inversion engine halt ctrl (handled by setup)
//  :[X|Y|Z][A-D]   - Axis scale constants
//  :[X|Y|Z]E       - Axis offset constants
//
//  :[X|Y|Z]        - The position of the core
//
//  :PosV2          - Text display output field

----+----|----+----|----+----|----+----|----+----|----+----|----+----|
m="station_" goto 1+:setup
:M1=m+"hq_imperial_a"      :X1=-9938.401 :Y1=  4904.714 :Z1=0
:M2=m+"hq_kingdom_a"       :X2= 9894.287 :Y2=  4904.714 :Z2=0
:M3=m+"proving_grounds"    :X3=19218.818 :Y3=-45540.987 :Z3=0
:M4=m+"capital_imperial_a" :X4= -465.876 :Y4=     0.236 :Z4=-801.149
:rst=1 :setup=0 //ISAN 2.0:Temp_Setup_2.4b              THE COLLECTIVE
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
goto 1+(:rst==1)
A=:X1-:X2 z=:Y1-:Y2 u=:Z1-:Z2 r=:X1-:X3 e=:Y1-:Y3 t=:Z1-:Z3 h=:X1-:X4
i=:Y1-:Y4 C=:Z1-:Z4 da=A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h n=-0.5
:XA=m  z=:Y2 u=:Z2 e=:Y3 t=:Z3 i=:Y4 C=:Z4 m=9223372036854775.807
:YA=m  A=n   r=n   h=n   :XA= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZA=m  z=:X2 e=:X3 i=:X4 :YA=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZB=m  u=:Y2 t=:Y3 C=:Y4 :ZA= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:YB=m  z=:X1 u=:Y1       :ZB=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XB=m  u=:Z1 t=:Z3 C=:Z4 :YB= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
       z=:Y1 e=:Y3 i=:Y4 :XB=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XC=m  e=:Y2 t=:Z2 //ISAN 2.0:InvEng_2.3b               THE COLLECTIVE
:YC=m  A=n   r=n   h=n   :XC= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZC=m  z=:X1 e=:X2 i=:X4 :YC=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZD=m  u=:Y1 t=:Y2 C=:Y4 :ZC= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:YD=m  i=:X3 C=:Y3       :ZD=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XD=m  u=:Z1 t=:Z2 C=:Z3 :YD= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
       z=:Y1 e=:Y2 i=:Y3 :XD=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
P1=:X1^2+:Y1^2+:Z1^2 P2=:X2^2+:Y2^2+:Z2^2 P3=:X3^2+:Y3^2+:Z3^2
P4=:X4^2+:Y4^2+:Z4^2 :XE=P1/:XA+P2/:XB+P3/:XC+P4/:XD
:YE=P1/:YA+P2/:YB+P3/:YC+P4/:YD :ZE=P1/:ZA+P2/:ZB+P3/:ZC+P4/:ZD :rst=0
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
y=999999
:X=(y-:R1)^2/:XA+(y-:R2)^2/:XB+(y-:R3)^2/:XC+(y-:R4)^2/:XD-:XE goto 2
goto 2 //ISAN 2.0:AxP_X_2.2b                            THE COLLECTIVE
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
y=999999
:Y=(y-:R1)^2/:YA+(y-:R2)^2/:YB+(y-:R3)^2/:YC+(y-:R4)^2/:YD-:YE goto 2
goto 2 //ISAN 2.0:AxP_Y_2.2b                            THE COLLECTIVE
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
y=999999
:Z=(y-:R1)^2/:ZA+(y-:R2)^2/:ZB+(y-:R3)^2/:ZC+(y-:R4)^2/:ZD-:ZE goto 2
goto 2 //ISAN 2.0:AxP_Z_2.2b                            THE COLLECTIVE
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
:PosV2="\nX: "+(:X-:X%1)+"\nY: "+(:Y-:Y%1)+"\nZ: "+(:Z-:Z%1) goto 1
//ISAN 2.0:Test display driver                          THE COLLECTIVE