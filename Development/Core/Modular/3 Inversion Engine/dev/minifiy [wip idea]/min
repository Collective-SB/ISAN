//WIP minified version of inversion engine
// an attempt to reduce chip count & global var number
// Outputs axis consts as a CSV string per axis
// Then chip can be used for another task

k=10^16 j=-0.5 l=1 A=:X1-:X2 i=:Y1-:Y4 C=:Z1-:Z4 goto 1+(:rst==1)
z=:Y1-:Y2 u=:Z1-:Z2 r=:X1-:X3 e=:Y1-:Y3 t=:Z1-:Z3 h=:X1-:X4 f=A*e*C
d=f-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h ################# #################
if l%2 then #######1######### else ########2######## end g=4 goto##
if l%2 then #######3######### else ########4######## end g=5 goto##
if l%2 then ################# else ################# end g=6 goto##
if l%2 then ################# else ################# end g=7 goto##
if l%2 then ################# else ################# end g=8 goto##
if l%2 then ################# else ################# end g=9 goto##
b=k g+=l++%2+#exit# b=d/A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h
if ### then if #### then :CX+=b else :CZ+=b end else :CY+=b end goto g
//other stuff?
//other stuff?
//other stuff?          Scanner?
//other stuff?          Database?
//other stuff?          Display Driver?
//other stuff?          Axis Processor(s)?
//other stuff?
//other stuff?
//other stuff?
----+----|----+----|----+----|----+----|----+----|----+----|----+----|

 
A b C d e f g h i j k l m n o p q r s t u v w x y z
# | # | # | | # # | | | |         #   # #         #
 elm det tmp|    -.5|sel|
           ret     Mnt cs1



goto 1+(:rst==1)
A=:X1-:X2 z=:Y1-:Y2 u=:Z1-:Z2 r=:X1-:X3 e=:Y1-:Y3 t=:Z1-:Z3 h=:X1-:X4
i=:Y1-:Y4 C=:Z1-:Z4 da=A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h n=-0.5
:XA=m  z=:Y2 u=:Z2 e=:Y3 t=:Z3 i=:Y4 C=:Z4 m=9223372036854775.807
:YA=m  A=n   r=n   h=n   :XA= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZA=m  z=:X2 e=:X3 i=:X4 :YA=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZB=m  u=:Y2 t=:Y3 C=:Y4 :ZA= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:YB=m  z=:X1 u=:Y1       :ZB=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XB=m  u=:Z1 t=:Z3 C=:Z4 :YB= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
       z=:Y1 e=:Y3 i=:Y4 :XB=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XC=m  e=:Y2 t=:Z2 //ISAN 2.0:InvEng_2.1a               THE COLLECTIVE
:YC=m  A=n   r=n   h=n   :XC= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZC=m  z=:X1 e=:X2 i=:X4 :YC=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:ZD=m  u=:Y1 t=:Y2 C=:Y4 :ZC= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:YD=m  i=:X3 C=:Y3       :ZD=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
:XD=m  u=:Z1 t=:Z2 C=:Z3 :YD= da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
       z=:Y1 e=:Y2 i=:Y3 :XD=-da/(A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h)
P1=:X1^2+:Y1^2+:Z1^2 P2=:X2^2+:Y2^2+:Z2^2 P3=:X3^2+:Y3^2+:Z3^2
P4=:X4^2+:Y4^2+:Z4^2 :XE=P1/:XA+P2/:XB+P3/:XC+P4/:XD
:YE=P1/:YA+P2/:YB+P3/:YC+P4/:YD :ZE=P1/:ZA+P2/:ZB+P3/:ZC+P4/:ZD :rst=0
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
k=10^16 j=-0.5 l=1 goto 1+(:rst==1)

if l%2 then #######1######### else ########2######## end g=3 goto##
if l%2 then #######3######### else ########4######## end g=4 goto##
if l%2 then ################# else ################# end g=## goto##
if l%2 then ################# else ################# end g=## goto##
if l%2 then ################# else ################# end g=## goto##
if l%2 then ################# else ################# end g=## goto##

b=k f=A*e*C-A*t*i-z*r*C+z*t*h+u*r*i-u*e*h if f then b=d/f end g+=l++%2
if m<m-l then if n<n-l then :X+=b else :Y+=b end else :Z+=b end goto g
----+----|----+----|----+----|----+----|----+----|----+----|----+----|