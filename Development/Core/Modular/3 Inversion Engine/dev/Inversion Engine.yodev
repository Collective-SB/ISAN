Calculated A^-1

given A [
    [1, -2*X1, -2*Y1, -2*Z1],      
    [1, -2*X2, -2*Y2, -2*Z2],
    [1, -2*X3, -2*Y3, -2*Z3],
    [1, -2*X4, -2*Y4, -2*Z4]
]


//Elem inverse & canceling the 8
//testing notes
    - (a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) == 0 when a const should be inf, this skips the line perfectly, just need to pre-set all consts to maxInt
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 da=a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g n=-0.5
:XA=m b=:Y2 c=:Z2e=:Y3 f=:Z3 h=:Y4 i=:Z4 :rst=0 m=9223372036854775.807
:YA=m  a=n   d=n   g=n   :XA= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:ZA=m  b=:X2 e=:X3 h=:X4 :YA=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:ZB=m  c=:Y2 f=:Y3 i=:Y4 :ZA= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:YB=m  b=:X1 c=:Y1       :ZB=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:XB=m  c=:Z1 f=:Z3 i=:Z4 :YB= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
       b=:Y1 e=:Y3 h=:Y4 :XB=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:XC=m  e=:Y2 f=:Z2
:YC=m  a=n   d=n   g=n   :XC= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:ZC=m  b=:X1 e=:X2 h=:X4 :YC=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:ZD=m  c=:Y1 f=:Y2 i=:Y4 :ZC= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:YD=m  h=:X3 i=:Y3       :ZD=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
:XD=m  c=:Z1 f=:Z2 i=:Z3 :YD= da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
       b=:Y1 e=:Y2 h=:Y3 :XD=-da/(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
P1=:X1^2+:Y1^2+:Z1^2 P2=:X2^2+:Y2^2+:Z2^2 P3=:X3^2+:Y3^2+:Z3^2
P4=:X4^2+:Y4^2+:Z4^2 :XE=P1/:XA+P2/:XB+P3/:XC+P4/:XD
:YE=P1/:YA+P2/:YB+P3/:YC+P4/:YD :ZE=P1/:ZA+P2/:ZB+P3/:ZC+P4/:ZD
goto 20-20*(:rst==1)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|



//Optimising for only desired elements. & adding E calcs
Given Ainv
[
    [C11,C12,C13,C14]   -> A    (can ignore this completely)
    [C21,C22,C23,C24]   -> X    -> [XA, XB, XC, XD]
    [C31,C32,C33,C34]   -> Y    -> [YA, YB, YC, YD]
    [C41,C42,C43,C44]   -> Z    -> [ZA, ZB, ZC, ZD]
]
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 detA=8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=:Y2 c=:Z2e=:Y3 f=:Z3 h=:Y4 i=:Z4 :rst=0
a=-0.5 d=a g=a    :XA= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X2 c=:X3 d=:X4 :YA=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Y2 f=:Y3 i=:Y4 :ZA= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X1 c=:Y1       :ZB=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Z1 f=:Z3 i=:Z4 :YB= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:Y1 e=:Y3 h=:Y4 :XB=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=:X1 d=:X3 g=:X4 d=:X2 e=:Y2 f=:Z2
a=-0.5 d=a g=a    :XC= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X1 e=:X2 h=:X4 :YC=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Y1 f=:Y2 i=:Y4 :ZC= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
h=:X3 i=:Y3       :ZD=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Z1 f=:Z2 i=:Z3 :YD= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:Y1 e=:Y2 h=:Y3 :XD=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
P1=:X1^2+:Y1^2+:Z1^2 P2=:X2^2+:Y2^2+:Z2^2 P3=:X3^2+:Y3^2+:Z3^2
P4=:X4^2+:Y4^2+:Z4^2 :XE=P1/:XA+P2/:XB+P3/:XC+P4/:XD 
:YE=P1/:YA+P2/:YB+P3/:YC+P4/:YD :ZE=P1/:ZA+P2/:ZB+P3/:ZC+P4/:ZD
goto 20-20*(:rst==1)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
Global:
  :Xn   (in) = nth lighthouse x position
  :Yn   (in) = nth lighthouse y position
  :Zn   (in) = nth lighthouse z position

  :rst  (in) = Reset control flag
                \-> Recalc consts when == 1
  :#A   (out)= #'th axis A constant (weight of Reciever 1)
  :#B   (out)= #'th axis B constant (weight of Reciever 2)
  :#C   (out)= #'th axis C constant (weight of Reciever 3)
  :#D   (out)= #'th axis D constant (weight of Reciever 4)
  :#E   (out)= #'th axis E constant (offset)

  (N∈{1,2,3,4}, #∈{"X","Y","Z"})

Local:
  a b c|d e f|g h i|j k l m n o p q r s t u v w x y z
  A A A A A A A A A       M N                 
  A   A   A     A A                 A   A A         A
// A: 3x3 matrix that the det function operates on 
    det(A)=(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)


//Full inverse calculator, fixed external fields (added :'s)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 detA=8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=:X2 b=:Y2 c=:Z2 d=:X3 e=:Y3 f=:Z3 g=:X4 h=:Y4 i=:Z4
                  :C11=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=-0.5 d=a g=a    :C21= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X2 c=:X3 d=:X4 :C31=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Y2 f=:Y3 i=:Y4 :C41= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X1 c=:Y1       :C42=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Z1 f=:Z3 i=:Z4 :C32= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:Y1 e=:Y3 h=:Y4 :C22=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=:X1 d=:X3 g=:X4 :C12= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
d=:X2 e=:Y2 f=:Z2 :C13=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=-0.5 d=a g=a    :C23= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:X1 e=:X2 h=:X4 :C33=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Y1 f=:Y2 i=:Y4 :C43= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
h=:X3 i=:Y3       :C44=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
c=:Z1 f=:Z2 i=:Z3 :C34= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
b=:Y1 e=:Y2 h=:Y3 :C24=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=:X1 d=:X2 g=:X3 :C14= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
goto 20-20*:recalc
----+----|----+----|----+----|----+----|----+----|----+----|----+----|




//Full inverse calculator (broken yolol)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 detA=8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X2 b=Y2 c=Z2 d=X3 e=Y3 f=Z3 g=X4 h=Y4 i=Z4
C11=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g) / detA
a=-0.5 d=a g=a C21= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
b=X2 c=X3 d=X4 C31=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
c=Y2 f=Y3 i=Y4 C41= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
b=X1 c=Y1      C42=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
c=Z1 f=Z3 i=Z4 C32= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
b=Y1 e=Y3 h=Y4 C22=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
a=X1 d=X3 g=X4 C12= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
d=X2 e=Y2 f=Z2 C13=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
a=-0.5 d=a g=a C23= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
b=X1 e=X2 h=X4 C33=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
c=Y1 f=Y2 i=Y4 C43= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
h=X3 i=Y3      C44=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
c=Z1 f=Z2 i=Z3 C34= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
b=Y1 e=Y2 h=Y3 C24=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
a=X1 d=X2 g=X3 C14= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)  / detA
goto 20-20*:recalc
----+----|----+----|----+----|----+----|----+----|----+----|----+----|



//adding signing
[+ - + -],  C12, C14
[- + - +],  C21, C23
[+ - + -],  C32, C34
[- + - +]   C41, C43
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 detA=8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X2 b=Y2 c=Z2 d=X3 e=Y3 f=Z3 g=X4 h=Y4 i=Z4
C11=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=-0.5 d=a g=a C12= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)     //same
b=X2 c=X3 d=X4 C13=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Y2 f=Y3 i=Y4 C14= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=X1 c=Y1      C24=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Z1 f=Z3 i=Z4 C23= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=Y1 e=Y3 h=Y4 C22=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X1 d=X3 g=X4 C21= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
d=X2 e=Y2 f=Z2 C31=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=-0.5 d=a g=a C32= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)     //same 
b=X1 e=X2 h=X4 C33=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Y1 f=Y2 i=Y4 C34= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
h=X3 i=Y3      C44=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Z1 f=Z2 i=Z3 C43= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=Y1 e=Y2 h=Y3 C42=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X1 d=X2 g=X3 C41= 8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|


//System for UNSIGNED cofactor matrix & detA
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=:X1-:X2 b=:Y1-:Y2 c=:Z1-:Z2 d=:X1-:X3 e=:Y1-:Y3 f=:Z1-:Z3 g=:X1-:X4
h=:Y1-:Y4 i=:Z1-:Z4 detA=8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X2 b=Y2 c=Z2 d=X3 e=Y3 f=Z3 g=X4 h=Y4 i=Z4
C11=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=-0.5 d=a g=a C12=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)     //same
b=X2 c=X3 d=X4 C13=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Y2 f=Y3 i=Y4 C14=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=X1 c=Y1      C24=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Z1 f=Z3 i=Z4 C23=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=Y1 e=Y3 h=Y4 C22=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X1 d=X3 g=X4 C21=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
d=X2 e=Y2 f=Z2 C31=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=-0.5 d=a g=a C32=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)     //same 
b=X1 e=X2 h=X4 C33=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Y1 f=Y2 i=Y4 C34=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
h=X3 i=Y3      C44=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
c=Z1 f=Z2 i=Z3 C43=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
b=Y1 e=Y2 h=Y3 C42=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
a=X1 d=X2 g=X3 C41=-8*(a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|


adjusted for det (all this Aj)
2* [
    [X1-X2, Y1-Y2, Z1-Z2],
    [X1-X3, Y1-Y3, Z1-Z3],
    [X1-X4, Y1-Y4, Z1-Z4]
]
//Get determinant of A (NB, this is scaled down by a factor of 8 (2 per row) will need to scale back)
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
a=X1-X2 b=Y1-Y2 c=Z1-Z2 d=X1-X3 e=Y1-Y3 f=Z1-Z3 h=X1-X4 i=Y1-Y4 j=Z1-Z4 ret=#next_line goto #det3
|------------------------- Sub-Matrix setup --------------------------| |-set return-|   |--call--|


For cofactor matrix "C", C[i][j]=det(Aij)   //REM signing
Eg, for C[1][1], A11 = [     
    [-2*X2, -2*Y2, -2*Z2],
    [-2*X3, -2*Y3, -2*Z3],
    [-2*X4, -2*Y4, -2*Z4]
] a=X2 b=Y2 c=Z2 d=X3 e=Y3 f=Z3 g=X4 h=Y4 i=Z4

for C[1][2], A12 = [       
    [1, -2*Y2, -2*Z2],
    [1, -2*Y3, -2*Z3],
    [1, -2*Y4, -2*Z4]
] a=-0.5 d=a g=a

for C[1][3], A13 = [          
    [1, -2*X2, -2*Z2],
    [1, -2*X3, -2*Z3],
    [1, -2*X4, -2*Z4]
] b=X2 e=X3 h=X4

for C[1][4], A14 = [               
    [1, -2*X2, -2*Y2],
    [1, -2*X3, -2*Y3],
    [1, -2*X4, -2*Y4]
]
c=Y2 f=Y3 i=Y4 

for C[2][4], A24 = [               
    [1, -2*X1, -2*Y1],      
    [1, -2*X3, -2*Y3],
    [1, -2*X4, -2*Y4]
]

b=X1 c=Y1

for C[2][3], A24 = [
    [1, -2*X1, -2*Z1],      
    [1, -2*X3, -2*Z3],
    [1, -2*X4, -2*Z4]
] c=Z1 f=Z3 i=Z4

for C[2][2], A22 = [
    [1, -2*Y1, -2*Z1],      
    [1, -2*Y3, -2*Z3],
    [1, -2*Y4, -2*Z4]
] b=Y1 e=Y3 h=Y4

for C[2][1], A21 = [
    [-2*X1, -2*Y1, -2*Z1],      
    [-2*X3, -2*Y3, -2*Z3],
    [-2*X4, -2*Y4, -2*Z4]
] a=X1 d=X3 g=X4

for C[3][1], A31 = [
    [-2*X1, -2*Y1, -2*Z1],      
    [-2*X2, -2*Y2, -2*Z2],
    [-2*X4, -2*Y4, -2*Z4]
] d=X2 e=Y2 f=Z2

for C[3][2], A32 = [
    [1, -2*Y1, -2*Z1],      
    [1, -2*Y2, -2*Z2],
    [1, -2*Y4, -2*Z4]
] a=-0.5 d=a g=a

for C[3][3], A33 = [
    [1, -2*X1, -2*Z1],      
    [1, -2*X2, -2*Z2],
    [1, -2*X4, -2*Z4]
] b=X1 e=X2 h=X4

for C[3][4], A34 = [
    [1, -2*X1, -2*Y1],      
    [1, -2*X2, -2*Y2],
    [1, -2*X4, -2*Y4]
] c=Y1 f=Y2 i=Y4

for C[4][4], A44 = [
    [1, -2*X1, -2*Y1],      
    [1, -2*X2, -2*Y2],
    [1, -2*X3, -2*Y3],
] h=X3 i=Y3
---------------------------------------------
for C[4][3], A43 = [
    [1, -2*X1, -2*Z1],      
    [1, -2*X2, -2*Z2],
    [1, -2*X3, -2*Z3],
] c=Z1 f=Z2 i=Z3

for C[4][2], A42 = [
    [1, -2*Y1, -2*Z1],      
    [1, -2*Y2, -2*Z2],
    [1, -2*Y3, -2*Z3],
] b=Y1 e=Y2 h=Y3

for C[4][1], A41 = [
    [-2*X1, -2*Y1, -2*Z1],      
    [-2*X2, -2*Y2, -2*Z2],
    [-2*X3, -2*Y3, -2*Z3],
]a=X1 d=X2 g=X3

---------------------------------------------

given A [
    [1, -2*X1, -2*Y1, -2*Z1],      
    [1, -2*X2, -2*Y2, -2*Z2],
    [1, -2*X3, -2*Y3, -2*Z3],
    [1, -2*X4, -2*Y4, -2*Z4]
]

deting [
    [a, b, c],
    [d, e, f],
    [g, h, i]
]


det3=a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g goto ret     //calculate det of 3x3 (a->i)

----+----|----+----|----+----|----+----|----+----|----+----|----+----|



Aim: communicate values to chip using
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
A=:I_A B=:I_B C=:I_C D=:I_D E=:I_E y=999999 goto 1+(:I_S=="X")
:X=(y-:R1)^2/A+(y-:R2)^2/B+(y-:R3)^2/C+(y-:R4)^2/D-E goto 2+:I_R
goto 2
----+----|----+----|----+----|----+----|----+----|----+----|----+----|
:X=(y-:R1)^2/A+(y-:R2)^2/B+(y-:R3)^2/C+(y-:R4)^2/D-E goto2-(:I_R=="X")